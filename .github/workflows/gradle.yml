# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Make default application.yml
      run: |
        mkdir -p ./src/main/resources
        touch ./src/main/resources/application.yml
        
        echo "${{ vars.APPLICATION_YML }}" >> ./src/main/resources/application.yml
      shell: bash
        
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
        
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: cicdsample
        path: build/libs/*.jar

    - name: Copy jar file to remote
      uses: appleboy/scp-action@master
      with:
        username: ubuntu
        host: ${{ secrets.HOST }}
        key: ${{ secrets.PRIVATE_KEY }}
        source: "./build/libs/*.jar"
        target: "/home/ubuntu/cicd"
        strip_components: 2
        
    - name: Copy deploy script file to remote
      uses: appleboy/scp-action@master
      with:
        username: ubuntu
        host: ${{ secrets.HOST }}
        key: ${{ secrets.PRIVATE_KEY }}
        source: "deploy.sh"
        target: "/home/ubuntu/cicd"
        
    - name: Execute deploy script
      uses: appleboy/ssh-action@master
      with:
        username: ubuntu
        host: ${{ secrets.HOST }}
        key: ${{ secrets.PRIVATE_KEY }}
        script_stop: true
        script: |
          export DATABASE_URL=${{ secrets.DATABASE_URL }}
          export DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
          export DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          chmod +x /home/ubuntu/cicd/deploy.sh
          sh /home/ubuntu/cicd/deploy.sh
